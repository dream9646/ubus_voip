
Part1: 4 port and 1 port ACL
Part2: 4 port and 1 port MAC learning limit

1.1 4port ACL
//add/del entry by port
int switch_ext_acl_add(int uni_port, char *dstmac, char *srcmac, unsigned short ethertype, unsigned int dstip, unsigned int srcip, unsigned short tcpsport, unsigned short tcpdport, unsigned short udpsport, unsigned short udpdport , unsigned char flush_hw);
flush_hw:1 flush to hardware immediately, 0 keep in software only. 

int switch_ext_acl_del(int uni_port, char *dstmac, char *srcmac, unsigned short ethertype, unsigned int dstip, unsigned int srcip, unsigned short tcpsport, unsigned short tcpdport, unsigned short udpsport, unsigned short udpdport);

int switch_ext_acl_del_by_port(int uni_port);
del all entry by port

int switch_ext_acl_change_mode(int uni_port, unsigned char mode);
0:black, 1:white

int switch_ext_acl_reset(void);
clean all port acl rule

unsigned int switch_ext_acl_dump(int uni_port);
dump

1.2 
Api is design as 2 port ACL, but customer actually use as single port
(we can only support one combind at one time ex: src mac black list or dst mac white list)

//please use function gpon_cli_acl_(src/dst)mac_del_by_port before change to other control method

int gpon_cli_acl_srcmac_limit_config(unsigned short int uni_port, unsigned char config_new);
configure port to black or white list
uni_port:	0 or 1
config_new 0:black list only 1:white list only

int gpon_cli_acl_srcmac_config_get(int uni_port, unsigned char *config);
int gpon_cli_acl_srcmac_config_set(int uni_port, unsigned char config);
get/set config value
uni_port:	0 or 1

int gpon_cli_acl_srcmac_add(int uni_port, unsigned char *macaddr);
int gpon_cli_acl_srcmac_del(int uni_port, unsigned char *macaddr);
add/del src MAC entry to access list
uni_port:	0 or 1
macaddr: target is assigned to unsigned char octet[6];
 

int gpon_cli_acl_srcmac_del_by_port(unsigned short int uni_port);
delete acl by port
uni_port:	0 or 1


int gpon_cli_acl_srcmac_dump(int uni_port);
dump acl by port
uni_port:	0 or 1




int gpon_cli_acl_dstmac_limit_config(unsigned short int uni_port, unsigned char config_new);
configure port to black or white list
uni_port:	0 or 1
config_new 0:black list only 1:white list only

int gpon_cli_acl_dstmac_config_get(int uni_port, unsigned char *config);
int gpon_cli_acl_dstmac_config_set(int uni_port, unsigned char config);
get/set config value
uni_port:	0 or 1

int gpon_cli_acl_dstmac_add(int uni_port, unsigned char *macaddr);
int gpon_cli_acl_dstmac_del(int uni_port, unsigned char *macaddr);
add/del src MAC entry to access list
uni_port:	0 or 1
macaddr: target is assigned to unsigned char octet[6];

int gpon_cli_acl_dstmac_del_by_port(unsigned short int uni_port);
delete acl by port
uni_port:	0 or 1

int gpon_cli_acl_dstmac_dump(int uni_port);
dump acl by port
uni_port:	0 or 1


2.1 
4 Port MAC leaning limit
int (*mac_learning_limit_get)(int swid, unsigned int port);
int (*mac_learning_limit_set)(int swid, unsigned int port, unsigned int count);
//count=0 for disable, count < RTK_MAX_NUM_OF_LEARN_LIMIT 0x2040 (8256)

2.2 
2 Port MAC leaning limit
int gpon_cli_acl_srcmac_learning_limit_set(unsigned short int uni_port, unsigned short int rule_number)
int gpon_cli_acl_srcmac_learning_limit_get(unsigned short int uni_port, unsigned short int *number)
get/set src MAC learning limit
uni_port:	0 or 1
rule_number:0 disable, number<=40

